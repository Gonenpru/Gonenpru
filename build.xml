<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project xmlns:ivy="antlib:org.apache.ivy.ant" basedir="." default="build" name="Airport-Management">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../../../../../../../private/var/folders/v9/mlkchf7n567gn49pjpk5h5jh0000gn/T/AppTranslocation/56D67776-A764-4C07-8640-29034D904CF0/d/Eclipse.app/Contents/Eclipse/"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <path id="Apache Tomcat v8.0 [Apache Tomcat v8.0].libraryclasspath">
        <pathelement location="../../apache-tomcat-8.0.37/lib/annotations-api.jar"/>
        <pathelement location="../../apache-tomcat-8.0.37/lib/catalina-ant.jar"/>
        <pathelement location="../../apache-tomcat-8.0.37/lib/catalina-ha.jar"/>
        <pathelement location="../../apache-tomcat-8.0.37/lib/catalina-storeconfig.jar"/>
        <pathelement location="../../apache-tomcat-8.0.37/lib/catalina-tribes.jar"/>
        <pathelement location="../../apache-tomcat-8.0.37/lib/catalina.jar"/>
        <pathelement location="../../apache-tomcat-8.0.37/lib/ecj-4.5.jar"/>
        <pathelement location="../../apache-tomcat-8.0.37/lib/el-api.jar"/>
        <pathelement location="../../apache-tomcat-8.0.37/lib/jasper-el.jar"/>
        <pathelement location="../../apache-tomcat-8.0.37/lib/jasper.jar"/>
        <pathelement location="../../apache-tomcat-8.0.37/lib/jsp-api.jar"/>
        <pathelement location="../../apache-tomcat-8.0.37/lib/servlet-api.jar"/>
        <pathelement location="../../apache-tomcat-8.0.37/lib/tomcat-api.jar"/>
        <pathelement location="../../apache-tomcat-8.0.37/lib/tomcat-coyote.jar"/>
        <pathelement location="../../apache-tomcat-8.0.37/lib/tomcat-dbcp.jar"/>
        <pathelement location="../../apache-tomcat-8.0.37/lib/tomcat-i18n-es.jar"/>
        <pathelement location="../../apache-tomcat-8.0.37/lib/tomcat-i18n-fr.jar"/>
        <pathelement location="../../apache-tomcat-8.0.37/lib/tomcat-i18n-ja.jar"/>
        <pathelement location="../../apache-tomcat-8.0.37/lib/tomcat-jdbc.jar"/>
        <pathelement location="../../apache-tomcat-8.0.37/lib/tomcat-jni.jar"/>
        <pathelement location="../../apache-tomcat-8.0.37/lib/tomcat-util-scan.jar"/>
        <pathelement location="../../apache-tomcat-8.0.37/lib/tomcat-util.jar"/>
        <pathelement location="../../apache-tomcat-8.0.37/lib/tomcat-websocket.jar"/>
        <pathelement location="../../apache-tomcat-8.0.37/lib/websocket-api.jar"/>
    </path>
    <path id="Web App Libraries.libraryclasspath">
        <pathelement location="WebContent/WEB-INF/lib/jstl-1.2.jar"/>
        <pathelement location="WebContent/WEB-INF/lib/mysql-connector-java-5.1.40-bin.jar"/>
    </path>
    <path id="EAR Libraries.libraryclasspath"/>
    <path id="Airport-Management.classpath">
        <pathelement location="build/classes"/>
        <path refid="Apache Tomcat v8.0 [Apache Tomcat v8.0].libraryclasspath"/>
        <path refid="Web App Libraries.libraryclasspath"/>
        <path refid="EAR Libraries.libraryclasspath"/>
    </path>
    <target name="init">
        <mkdir dir="build/classes"/>
        <copy includeemptydirs="false" todir="build/classes">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="build/classes"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="build/classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="Airport-Management.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="test">
       <echo message="Compiling source code"/>
    </target>
    <target name="deps">
       <echo message="Dependencies"/>
    </target>
	<!-- ivy start -->
	<target name="resolve" description="retrieve dependencies with ivy">
		<echo message="Getting dependencies..." />
		<ivy:retrieve />
	
		<ivy:cachepath pathid="compile.path" conf="compile" />
		<ivy:cachepath pathid="runtime.path" conf="runtime" />
		<ivy:cachepath pathid="test.path" conf="test" />
	
	</target>
	<!-- Compile Java source from ${src.dir} and output it to ${web.classes.dir} -->
	<target name="compile" depends="init, resolve" description="compile source code">
		<mkdir dir="${web.classes.dir}" />
		<javac destdir="${web.classes.dir}" source="${jdk.version}"
			target="${jdk.version}" debug="true"
                        includeantruntime="false" classpathref="compile.path">
			<src path="${src.dir}" />
		</javac>
	</target>
	<!-- Run jUnit -->
	<target name="junit" depends="compile">

	  <junit printsummary="yes" haltonfailure="no">

		<classpath refid="test.path" />
		<classpath location="${web.classes.dir}" />

		<formatter type="xml" />
		<batchtest fork="yes" todir="${report.dir}">
			<fileset dir="${test.dir}">
				<include name="**/*Test*.java" />
			</fileset>
		</batchtest>

	  </junit>
	</target>
</project>
